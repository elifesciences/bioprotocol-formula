upstream django {
    server unix:///var/run/uwsgi/bioprotocol.socket;
}

{% if salt['elife.cfg']('cfn.outputs.DomainName') %}
# close connection on those that don't specify a 'host' header
# http://nginx.org/en/docs/http/request_processing.html
server {
    listen 80;
    listen 443;
    server_name "";
    return 444;
}
{% endif %}

# configuration of the server
server {
    # we always listen on port 80.
    # in non-dev environments port 80 is only available to internal traffic
    listen      80;
    {% if salt['elife.cfg']('cfn.outputs.DomainName') %}
    listen      443 ssl; # see /etc/nginx/nginx.conf for global ssl settings
    server_name {{ salt['elife.cfg']('project.project_hostname') }}
                {{ salt['elife.cfg']('project.full_hostname') }}
                {{ salt['elife.cfg']('project.int_project_hostname') }}
                {{ salt['elife.cfg']('project.int_full_hostname') }};
    {% else %}
    server_name localhost;
    {% endif %}

    charset utf-8;

    access_log /var/log/nginx/bioprotocol.access.log;
    error_log /var/log/nginx/bioprotocol.error.log;

    # max upload size
    client_max_body_size 5M;

    # used for admin
    location /static {
        alias /srv/bioprotocol/collected-static;
    }

    # all non-media requests
    location / {
        uwsgi_pass django;
        # drop connection after this many seconds
        # WARNING: this value *must* be higher than uwsgi's 'harakiri' value
        # (10s) in /srv/$app/uwsgi.ini
        uwsgi_read_timeout 15s;
        include /etc/uwsgi/params;

        {% if pillar.elife.env not in ['dev'] %}
        # restrict by ip{% for cidr in pillar.bioprotocol.api_whitelist %}
        allow {{ cidr }};{% endfor %}
        deny all; # everyone else except those in range above are allowed
        {% endif %}
    }
}
